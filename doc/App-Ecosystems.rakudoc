=begin pod

=head1 NAME

App::Ecosystems - Interactive Ecosystem Inspector

=head1 SYNOPSIS

=begin code

$ ecosystems
Loading rea ecosystem...
rea >

=end code

=head1 DESCRIPTION

App::Ecosystems provides an interactive shell for interrogating and
inspecting the Raku module ecosystem, providing an interactive interface
to the API provided by the L<C<Ecosystem>|https://raku.land/zef:lizmat/Ecosystem>
module.

This shell is both provided as an exported C<ecosystems> subroutine, as
well as a command-line script called C<ecosystems>.

=head1 COMMANDS

These are the available commands in alphabetical order.  Note that
if C<Linenoise> or C<Terminal::LineEditor> is used as the underlying
interface, tab completion will be available for all of these commands.

Also note that each command may be shortened to a unique root: so
just entering "a" would be ambiguous, but "ap" would give you the
"api" functionality.

=head2 api

=begin output

rea > api
Default api is: 'Any'

rea > api 1
Default api set to '1'

=end output

Show or set the default "api" value to be used in ecosystem searches.

=head2 authority

=begin output

rea > auth
Default authority is: 'Any'

rea > auth zef:raku-community-modules
Default authority set to 'zef:raku-community-modules'

=end output

Show or set the default "auth" value to be used in ecosystem searches.

=head2 catch

=begin output

rea > catch
Exception catching is: ON

rea > catch off
Exception catching set to OFF

=end output

Show whether exceptions will be caught or not, or change that setting.
By deault any exceptions during execution will be caught and only a
one-line message of the error will be shown.  By default it is B<ON>.
Switching it to B<OFF> will cause an exception to show a complete
backtrace and exit the program, which may be desirable during debugging
and/or error reporting.

=head2 dependencies

=begin output

rea > dependencies Map::Match
Dependencies of Map::Match:ver<0.0.5>:auth<zef:lizmat>
Add 'verbose' for recursive depencies
--------------------------------------------------------------------------------
Hash::Agnostic:ver<0.0.16>:auth<zef:lizmat>
Map::Agnostic:ver<0.0.10>:auth<zef:lizmat>

=end output

Show the dependencies of a given distribution name.  If the distribution
name is not fully qualified with C<auth>, C<ver> and C<api>, then the
most recent version will be assumed.

=begin output

rea > dependencies Map::Match :ver<0.0.1>
Dependencies of Map::Match:ver<0.0.1>:auth<zef:lizmat>
Add 'verbose' for recursive depencies
--------------------------------------------------------------------------------
Hash::Agnostic:ver<0.0.10>:auth<zef:lizmat>
Map::Agnostic:ver<0.0.6>:auth<zef:lizmat>

=end output

You can also specify a version if you'd like to see the dependency
information of that version of the distribution.

=head2 distro

=begin output

rea > distro Agnostic
Distributions that match 'Agnostic'
Add 'verbose' to also see their frequency
--------------------------------------------------------------------------------
Array::Agnostic
Hash::Agnostic
List::Agnostic
Map::Agnostic

=end output

Show the names of the distributions with the given search term.  For now
any distribution name that contains the given string, will be included.

=head2 ecosystem

=begin output

rea > ecosystem
Using the rea ecosystem

rea > ecosystem fez
Loading fez ecosystem...
fez >

=end output

Show or set the ecosystem to be used in ecosystem searches.  Note that
the currently used ecosystem is also shown in the prompt.

=head2 editor

=begin output

rea > editor
LineEditor

=end output

Show the name of the underlying editor that is being used.  Note that
only C<Linenoise> and C<LineEditor> allow tab-completions.

=head2 exit

=begin output

rea > exit
$

=end output

Exit and save any history.

=head2 from

=begin output

rea > from
Default from is: 'Any'

rea > from NQP
Default from set to 'NQP'

=end output

Show or set the default "from" value to be used in ecosystem searches.

=head2 help

=begin output

rea > help
Available commands:
--------------------------------------------------------------------------------
api authority catch dependencies distro ecosystem editor exit from help
identity meta quit reverse-dependencies river unresolvable unversioned
use-target verbose version

=end output

Show available commands.

=head2 identity

=begin output

=end output

=head2 meta

=begin output

rea > meta actions
Meta information of actions:ver<0.0.2>:auth<zef:lizmat>
Resolved from: actions
--------------------------------------------------------------------------------
{
  "auth": "zef:lizmat",
  "authors": [
    "Elizabeth Mattijsen"
  ],
  "description": "Introduce \"actions\" keyword",
  "dist": "actions:ver<0.0.2>:auth<zef:lizmat>",
  "license": "Artistic-2.0",
  "name": "actions",
  "perl": "6.d",
  "provides": {
    "actions": "lib/actions.rakumod"
  },
  "release-date": "2024-09-23",
  "source-url": "https://raw.githubusercontent.com/raku/REA/main/archive/A/actions/actions%3Aver%3C0.0.2%3E%3Aauth%3Czef%3Alizmat%3E.tar.gz",
  "tags": [
    "GRAMMAR",
    "ACTIONS"
  ],
  "version": "0.0.2"
}

=end output

Show the meta information of the given distribution name.

=head2 quit

=begin output

rea > quit
$

=end output

Exit and save any history.

=head2 reverse-dependencies

=begin output

=end output

=head2 river

=begin output

rea > river
Top 3 distributions and number of dependees
Add 'verbose' to also see the actual dependees
JSON::Fast (398)
File::Directory::Tree (249)
MIME::Base64 (233)

=end output

Show the N distributions (defaults to B<3>) that have the most reverse
dependencies (aka: are most "up-stream").

=head2 unresolvable

=begin output

=end output

=head2 unversioned

=begin output

rea > unversioned
Found 105 distributions that did not have a release with a valid version
Add 'verbose' to list the distribution names

=end output

Show how many distributions there are in the ecosystem without valid
version information (and which did B<not> have a later release with a
valid version value).  Optionally also list the names of these
distributions.

=head2 use-target

=begin output

rea > use-target Crane::A
Use targets that match Crane::A
Add 'verbose' to also see their distribution
--------------------------------------------------------------------------------
Crane::Add
Crane::At

=end output

Show the names of the C<use> targets with the given search term
(aka search all keys that are specified in C<provides> sections
of distributions in the ecosystem.  For now, any name that contains
the given string, will be included.

=head2 verbose

=begin output

rea > verbose
Verbosity is: OFF

rea > verbose on
Verbosity set to ON

=end output

Show or set the default verbosity level to be used in showing the result
of ecosystem searches.  The default is B<OFF>.

=head2 version

=begin output

rea > version
Default version is: 'Any'

rea > version 0.0.3+
Default version set to '0.0.3+'

=end output

Show or set the default "ver" value to be used in ecosystem searches.

=head2 SEE ALSO

This module is basically a replacement of the
L<C<CLI::Ecosystem>|https://raku.land/zef:lizmat/CLI::Ecosystem> module,
which suffers from noticeable startup delay because of ecosystem
information loading on B<each> invocation.

=head1 AUTHOR

Elizabeth Mattijsen <liz@raku.rocks>

Source can be located at: https://github.com/lizmat/App-Ecosystems .
Comments and Pull Requests are welcome.

If you like this module, or what I'm doing more generally, committing to a
L<small sponsorship|https://github.com/sponsors/lizmat/>  would mean a great
deal to me!

=head1 COPYRIGHT AND LICENSE

Copyright 2024 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
